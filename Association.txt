public class CabServiceProvider
{
	private String cabservicename;
	private int totalcabs;
	
	CabServiceProvider(String cabservicename,int totalcabs)
	{
		this.cabservicename=cabservicename;
		this.totalcabs=totalcabs;
	}
	
	public double calculateRewardPrice(Driver driver)
	{
		double bonus=0;
		if(driver.getAverageRating()>=4.5 && driver.getAverageRating()<=5)
		{
			bonus=10*driver.getAverageRating();
		}
		else if(driver.getAverageRating()>=4 && driver.getAverageRating()<=4.5)
		{
			bonus=5*driver.getAverageRating();
		}
		return bonus;
		
		
	}

}

public class Driver
{
	private String driverName;
	private float averageRating;
	
	public Driver(String driverName, float averageRating){
		this.driverName=driverName;
		this.averageRating=averageRating;
	}
	
	public String getDriverName(){
		return this.driverName;
	}
	
	public void setDriverName(String driverName){
		this.driverName=driverName;
	}
	
	public float getAverageRating(){
		return this.averageRating;
	}
	
	public void setAverageRating(float averageRating){
		this.averageRating=averageRating;
	}

    
    public String toString(){
        return "Driver\ndriverName: "+this.driverName+"\naverageRating: "+this.averageRating;
    }

}


public class Cabservice_provide_Tester {

	public static void main(String[] args) 
	{
		CabServiceProvider cabServiceProvider1 = new CabServiceProvider("Halo", 50);

		Driver driver1 = new Driver("Luke", 4.8f);
		Driver driver2 = new Driver("Mark", 4.2f);
		Driver driver3 = new Driver("David", 3.9f);
		
		Driver[] driversList = { driver1, driver2, driver3 };
		for (Driver driver : driversList) {
			System.out.println("Driver Name: "+driver.getDriverName());
			double bonus = cabServiceProvider1.calculateRewardPrice(driver);
			if (bonus>0)
				System.out.println("Bonus: $"+bonus+"\n");
			else
				System.out.println("Sorry, bonus is not available!");
		}

	}

}
